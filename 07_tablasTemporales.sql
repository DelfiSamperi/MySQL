-- Ejercicios Pr√°cticos con Tablas Temporales 
-- Utiliza TABLE para consultar la tabla productos de manera simple, ordenando los productos de forma descendente por precio y solo 10 filas.

-- Crea una tabla temporal de los empleados donde unifiques su nombre y apellido en una sola columna.

-- Crea una tabla temporal de la tabla clientes donde solo tengas la columna nombre.

-- Realiza la uni√≥n entre las tablas temporales de empleados y clientes usando TABLE.

-- Crea una tabla temporal escuela primaria que tenga las siguientes columnas: id(int), nombre(varchar), apellido(varchar), edad(int) y grado(int). Y que tenga los siguientes valores:

-- ID: 1, Nombre: Alejandro, Apellido: Gonz√°lez, Edad: 11, Grado: 5

-- ID: 2, Nombre: Isabella, Apellido: L√≥pez, Edad: 10, Grado: 4

-- ID: 3, Nombre: Lucas, Apellido: Mart√≠nez, Edad: 11, Grado: 5 

-- ID: 4, Nombre: Sof√≠a, Apellido: Rodr√≠guez, Edad: 10, Grado: 4 

-- ID: 5, Nombre: Mateo, Apellido: P√©rez, Edad: 12, Grado: 6 

-- ID: 6, Nombre: Valentina, Apellido: Fern√°ndez, Edad: 12, Grado: 6

-- ID: 7, Nombre: Diego, Apellido: Torres, Edad: 10, Grado: 4

-- ID: 8, Nombre: Martina, Apellido: G√≥mez, Edad: 11, Grado: 5

-- ID: 9, Nombre: Joaqu√≠n, Apellido: Hern√°ndez, Edad: 10, Grado: 4

-- ID: 10, Nombre: Valeria, Apellido: D√≠az, Edad: 11, Grado: 5


-- ‚úèÔ∏èEjercicios Complementarios con Tablas Temporales 
-- ‚ú® Estos ejercicios son de tipo complementario. Esto quiere decir que te ayudar√° a avanzar en profundidad en el tema visto, pero no son obligatorios. Te recomendamos intentar con tu equipo trabajar algunos de ellos.


-- Agrega un cliente nuevo con el nombre ‚ÄúAna Rodr√≠guez‚Äù y con direcci√≥n en ‚ÄúSan Mart√≠n 2515, Mar del Plata‚Äù. Luego realiza la intersecci√≥n entre la tabla temporal de empleados y clientes.

-- üí° Debes volver a crear la tabla temporal de clientes para actualizar esa tabla.


-- Realiza la excepci√≥n entre la tabla temporal de clientes y la de empleados.

-- Crea una tabla temporal escuela secundaria que tenga las siguientes columnas: id(int), nombre(varchar), apellido(varchar), edad(int) y grado(int). Y que tenga los siguientes valores:

-- ID: 1, Nombre: Eduardo, Apellido: S√°nchez, Edad: 16, Grado: 10

-- ID: 2, Nombre: Camila, Apellido: Mart√≠n, Edad: 17, Grado: 11

-- ID: 3, Nombre: Manuel, Apellido: Guti√©rrez, Edad: 15, Grado: 9

-- ID: 4, Nombre: Laura, Apellido: Garc√≠a, Edad: 16, Grado: 10

-- ID: 11, Nombre: Pablo, Apellido: Ortega, Edad: 17, Grado: 11

-- ID: 12, Nombre: Carmen, Apellido: Ram√≠rez, Edad: 15, Grado: 9

-- ID: 13, Nombre: Carlos, Apellido: Molina, Edad: 16, Grado: 10

-- ID: 14, Nombre: Ana, Apellido: Ruiz, Edad: 17, Grado: 11

-- ID: 15, Nombre: Luis, Apellido: Fern√°ndez, Edad: 15, Grado: 9

-- ID: 16, Nombre: Mar√≠a, Apellido: L√≥pez, Edad: 16, Grado: 10

-- Realiza la intersecci√≥n de la escuela primaria y escuela secundaria con el nombre y apellido de los alumnos para saber quienes fueron a ambas escuelas.

-- Realiza la excepci√≥n de la escuela primaria con la secundaria para saber quienes no siguieron cursando en dicha escuela secundaria.

-- Realiza la excepci√≥n de la escuela secundaria con la primaria para saber quienes no siguieron cursando en dicha escuela secundaria.

-- Realiza la uni√≥n de la escuela primaria y secundaria con la columna grado para saber cu√°les son los grados que abarcan ambas escuelas, y ord√©nalos de forma descendente.


